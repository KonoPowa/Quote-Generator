{"version":3,"sources":["components/headerComponent1/header.js","components/footerComponent/footer.js","components/pages/homePage.js","components/pages/products.js","App.js","serviceWorker.js","index.js"],"names":["makeItRain","$","empty","increment","drops","backDrops","randoHundo","Math","floor","random","randoFiver","append","on","toggleClass","React","Component","quote","author","arr","randomColor","length","console","log","document","ready","click","this","attr","Homepage","props","state","name","color","handleClick","bind","hasClass","removeClass","addClass","getJSON","data","setState","quoteText","quoteAuthor","className","id","style","class","href","target","onClick","backgroundColor","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","then","registration","unregister","catch","error","message"],"mappings":"gSAMIA,EAAa,WAEfC,IAAE,SAASC,QAMX,IAJA,IAAIC,EAAY,EACZC,EAAQ,GACRC,EAAY,GAETF,EAAY,KAAK,CAGtB,IAAIG,EAAcC,KAAKC,MAAM,GAAAD,KAAKE,SAA0B,GAExDC,EAAcH,KAAKC,MAAM,EAAAD,KAAKE,SAAyB,GAI3DL,GAAS,mCAFTD,GAAaO,GAE4C,eAAiBA,EAAaA,EAAa,EAAI,KAAO,yBAA2BJ,EAAa,6BAA+BA,EAAa,mDAAqDA,EAAa,6BAA+BA,EAAa,0DAA4DA,EAAa,6BAA+BA,EAAa,mBACtaD,GAAa,mCAAqCF,EAAY,eAAiBO,EAAaA,EAAa,EAAI,KAAO,yBAA2BJ,EAAa,6BAA+BA,EAAa,mDAAqDA,EAAa,6BAA+BA,EAAa,0DAA4DA,EAAa,6BAA+BA,EAAa,mBAG7aL,IAAE,mBAAmBU,OAAOP,GAC5BH,IAAE,kBAAkBU,OAAON,IAG7BJ,IAAE,wBAAwBW,GAAG,SAAS,WACpCX,IAAE,QAAQY,YAAY,gBACtBZ,IAAE,wBAAwBY,YAAY,UACtCb,OAGFC,IAAE,2BAA2BW,GAAG,SAAS,WACvCX,IAAE,QAAQY,YAAY,mBACtBZ,IAAE,2BAA2BY,YAAY,UACzCb,OAGFC,IAAE,yBAAyBW,GAAG,SAAS,WACrCX,IAAE,QAAQY,YAAY,iBACtBZ,IAAE,yBAAyBY,YAAY,UACvCb,OAGFA,IAYqBc,IAAMC,UC1DND,IAAMC,U,WCEvBC,EAAQ,sIACRC,EAAS,wCAETC,EAAM,CAAC,SAAS,SAAS,SAAS,SAAS,SAAU,SAAU,SAAU,SAAU,SAAU,SAAS,SAAU,SAAU,SAAS,SAAS,SAAS,SAAS,SAAS,UACvKC,EAAcD,EAAIX,KAAKC,MAAMD,KAAKE,SAASS,EAAIE,SACnDC,QAAQC,IAAIH,GACZE,QAAQC,IAAIN,GAMZf,IAAEsB,UAAUC,OAAM,WAAWvB,IAAE,gBAAgBwB,OAAM,WACnDxB,IAAEyB,MAAMC,KAAK,OAAQ,yCAA2CX,EAAQC,S,IA+F3DW,E,kDA/Db,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXC,KAAMf,EACNC,OAAQA,EACRe,MAAOd,EAAIX,KAAKC,MAAMD,KAAKE,SAASS,EAAIE,UAE1C,EAAKa,YAAc,EAAKA,YAAYC,KAAjB,gBAPF,E,0DAxBhBjC,IAAE,cAAckC,SAAS,eACnBlC,IAAE,cAAcmC,YAAY,eAAeC,SAAS,cAEtDpC,IAAE,cAAckC,SAAS,cACzBlC,IAAE,cAAcmC,YAAY,cAAcC,SAAS,eAEnDpC,IAAE,cAAckC,SAAS,gBACzBlC,IAAE,cAAcmC,YAAY,eAAeC,SAAS,cAgCzDpC,IAAEqC,QA9DI,mFA8DS,SAASC,GACxBlB,QAAQC,IAAIiB,GACZb,KAAKc,SAAS,CACZT,KAAMQ,EAAKE,UACXxB,OAAQ,WAASsB,EAAKG,YACtBV,MAAOd,EAAIX,KAAKC,MAAMD,KAAKE,SAASS,EAAIE,WAE1CJ,EAAQuB,EAAKE,UAEC,aADdxB,EAASS,KAAKI,MAAMb,SAElBS,KAAKc,SAAS,CACZvB,OAAQ,qBAGZiB,KAAKR,OAGTL,QAAQC,IAAIN,K,+BAGV,OAGE,yBAAK2B,UAAY,mBAGf,yBAAKA,UAAY,8BAA8BC,GAAK,aAClD,uBAAGA,GAAG,QAAOC,MAAS,CAACb,MAAO,IAAMN,KAAKI,MAAME,QAAUN,KAAKI,MAAMC,MACpE,uBAAGa,GAAK,SAASC,MAAS,CAACb,MAAO,IAAMN,KAAKI,MAAME,QAASN,KAAKI,MAAMb,OAAvE,KACA,yBAAK0B,UAAY,MAAMC,GAAG,UACxB,yBAAKA,GAAG,WACN,uBAAGA,GAAK,cAAcE,MAAM,2EAA2EC,KAAO,yCAAyCC,OAAQ,UAC7J,0BAAMF,MAAM,wBADd,WAIF,yBAAKF,GAAG,UAAUD,UAAY,kBAC5B,4BAAQM,QAASvB,KAAKO,YAAaY,MAAS,CAACK,gBAAgB,IAAMxB,KAAKI,MAAME,OAAQW,UAAY,8BAA8BC,GAAK,aAArI,qB,GArDW9B,IAAMC,WC3CND,IAAMC,U,MCuBdoC,MAbf,WACE,OAIM,kBAAC,EAAD,OCRYC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFpC,SAASqC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAActC,MACrBuC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACL9C,QAAQ8C,MAAMA,EAAMC,c","file":"static/js/main.cc51f6b3.chunk.js","sourcesContent":["import React from 'react';\r\nimport{\r\n  Link\r\n} from 'react-router-dom';\r\n\r\nimport $ from 'jquery';\r\nvar makeItRain = function() {\r\n  //clear out everything\r\n  $('.rain').empty();\r\n\r\n  var increment = 0;\r\n  var drops = \"\";\r\n  var backDrops = \"\";\r\n\r\n  while (increment < 100) {\r\n    //couple random numbers to use for various randomizations\r\n    //random number between 98 and 1\r\n    var randoHundo = (Math.floor(Math.random() * (98 - 1 + 1) + 1));\r\n    //random number between 5 and 2\r\n    var randoFiver = (Math.floor(Math.random() * (5 - 2 + 1) + 2));\r\n    //increment\r\n    increment += randoFiver;\r\n    //add in a new raindrop with various randomizations to certain CSS properties\r\n    drops += '<div class=\"drop\" style=\"left: ' + increment + '%; bottom: ' + (randoFiver + randoFiver - 1 + 100) + '%; animation-delay: 0.' + randoHundo + 's; animation-duration: 0.5' + randoHundo + 's;\"><div class=\"stem\" style=\"animation-delay: 0.' + randoHundo + 's; animation-duration: 0.5' + randoHundo + 's;\"></div><div class=\"splat\" style=\"animation-delay: 0.' + randoHundo + 's; animation-duration: 0.5' + randoHundo + 's;\"></div></div>';\r\n    backDrops += '<div class=\"drop\" style=\"right: ' + increment + '%; bottom: ' + (randoFiver + randoFiver - 1 + 100) + '%; animation-delay: 0.' + randoHundo + 's; animation-duration: 0.5' + randoHundo + 's;\"><div class=\"stem\" style=\"animation-delay: 0.' + randoHundo + 's; animation-duration: 0.5' + randoHundo + 's;\"></div><div class=\"splat\" style=\"animation-delay: 0.' + randoHundo + 's; animation-duration: 0.5' + randoHundo + 's;\"></div></div>';\r\n  }\r\n\r\n  $('.rain.front-row').append(drops);\r\n  $('.rain.back-row').append(backDrops);\r\n}\r\n\r\n$('.splat-toggle.toggle').on('click', function() {\r\n  $('body').toggleClass('splat-toggle');\r\n  $('.splat-toggle.toggle').toggleClass('active');\r\n  makeItRain();\r\n});\r\n\r\n$('.back-row-toggle.toggle').on('click', function() {\r\n  $('body').toggleClass('back-row-toggle');\r\n  $('.back-row-toggle.toggle').toggleClass('active');\r\n  makeItRain();\r\n});\r\n\r\n$('.single-toggle.toggle').on('click', function() {\r\n  $('body').toggleClass('single-toggle');\r\n  $('.single-toggle.toggle').toggleClass('active');\r\n  makeItRain();\r\n});\r\n\r\nmakeItRain();\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nclass Header extends React.Component  {\r\n  render(){\r\n  return (\r\n    <header>\r\n\r\n    <div className=\"rain front-row\"></div>\r\n    <div className=\"rain back-row\"></div>\r\n    <div className=\"toggles\">\r\n      <div className=\"splat-toggle toggle active\">SPLAT</div>\r\n      <div className=\"single-toggle toggle\">SINGLE</div>\r\n    </div>\r\n    </header>\r\n  );\r\n}\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\r\n\r\n\r\nclass Footer extends React.Component  {\r\n  render(){\r\n  return (\r\n    <footer>\r\n\r\n      Footer\r\n\r\n    </footer>\r\n  );\r\n}\r\n}\r\n\r\nexport default Footer;\r\n","import React from 'react';\r\nimport $ from 'jquery';\r\n//url for the api\r\nvar url = \"https://api.forismatic.com/api/1.0/?method=getQuote&lang=en&format=jsonp&jsonp=?\";\r\n//my initial quote that I wanted to display\r\nvar quote = \"Quotes help us understand, inspire, motivate, clarify and show our approach to things around, this is why people and I love quotes.\"\r\nvar author = \" — Takyou Allah Cheikh Malaynine\"\r\n//my arr of colors\r\nvar arr = ['D33F49','D7C0D0','53A2BE','74226C','262730', '3A405A', '1A281F', 'C17C74', 'DDC9B4', '4B4E6D','84DCC6', '95A3B3', 'C7EFCF','F0B67F','FE5F55','D6D1B1','B9CDDA','6B7D7D']\r\nvar randomColor = arr[Math.floor(Math.random()*arr.length)]\r\nconsole.log(randomColor)\r\nconsole.log(quote)\r\n\r\n\r\n //$(\"body\").append(\"<code>\" + JSON.stringify(data, null, '<br/>') + \"</code>\");\r\n\r\n//share button for twitter\r\n$(document).ready(function(){$('#tweet-quote').click(function() {\r\n  $(this).attr(\"href\", 'https://twitter.com/intent/tweet?text=' + quote + author);\r\n})});\r\n\r\nconst styles = {\r\n  transition: 'opacity 1s ease-out'\r\n}\r\n\r\nfunction animateIn(){\r\n  if($('#quote-div').hasClass('transition2') ){\r\n    return $(\"#quote-div\").removeClass('transition2').addClass('transition')\r\n\r\n}else if($('#quote-div').hasClass('transition') ){\r\n  return $(\"#quote-div\").removeClass('transition').addClass('transition3')\r\n\r\n}else if($('#quote-div').hasClass('transition3')){\r\n  return $(\"#quote-div\").removeClass('transition3').addClass('transition')\r\n\r\n}\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nclass Homepage extends React.Component  {\r\n//set up\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      name: quote,\r\n      author: author,\r\n      color: arr[Math.floor(Math.random()*arr.length)]\r\n    }\r\n    this.handleClick = this.handleClick.bind(this);\r\n  }\r\n\r\n\r\n\r\n//on click this will call the api with random quotes, and then set the states accordingly.\r\n   handleClick()  {\r\n    animateIn()\r\n    $.getJSON(url, function(data){\r\n    console.log(data);\r\n    this.setState({\r\n      name: data.quoteText,\r\n      author: \" — \" +  data.quoteAuthor,\r\n      color: arr[Math.floor(Math.random()*arr.length)]\r\n    })\r\n    quote = data.quoteText\r\n    author = this.state.author\r\n    if (author == \" — \"){\r\n      this.setState({\r\n        author: \" — Unknown\"\r\n      })\r\n    }\r\n  }.bind(this))\r\n\r\n\r\nconsole.log(quote)\r\n}\r\n  render(){\r\n  return (\r\n\r\n\r\n    <div className = \"container-fluid\" >\r\n      {/*<h1 id = \"title\"> Random Quote Machine </h1>*/}\r\n\r\n      <div className = \"container-fluid transition2\" id = \"quote-div\">\r\n        <p id=\"quote\"style = {{color: \"#\" + this.state.color}} >{this.state.name}</p>\r\n        <p id = \"author\" style = {{color: \"#\" + this.state.color}}>{this.state.author} </p>\r\n        <div className = \"row\" id=\"button\">\r\n          <div id=\"twitter\" >\r\n            <a id = \"tweet-quote\" class=\"btn btn-block btn-social btn-twitter align-text-top twitter-share-button\" href = \"https://twitter.com/intent/tweet?text=\" target= \"_blank\">\r\n              <span class=\"fa fa-twitter fa-2x\"></span> Share\r\n            </a>\r\n          </div>\r\n          <div id=\"wrapper\" className = \"vertical-align\">\r\n            <button onClick={this.handleClick} style = {{backgroundColor:'#' + this.state.color}} className = \"btn btn-primary shadow-none\" id = \"new-quote\">New Quote</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n\r\n    </div>\r\n\r\n  );\r\n}\r\n}\r\n\r\nexport default Homepage;\r\n//\r\n","import React from 'react';\r\n\r\n\r\n\r\n\r\nclass Products extends React.Component  {\r\n  render(){\r\n  return (\r\n    <div className = \"container-fluid\">\r\n      <h1> Products </h1>\r\n      <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Pellentesque elit ullamcorper dignissim cras tincidunt lobortis feugiat. Phasellus vestibulum lorem sed risus ultricies tristique nulla aliquet. Nunc aliquet bibendum enim facilisis gravida neque convallis a. Enim sit amet venenatis urna cursus eget. Erat nam at lectus urna duis convallis convallis tellus id. Ac auctor augue mauris augue neque gravida in fermentum. Turpis nunc eget lorem dolor sed viverra ipsum. Tristique et egestas quis ipsum. Vitae proin sagittis nisl rhoncus mattis rhoncus urna. Ut diam quam nulla porttitor massa id neque aliquam vestibulum. Volutpat blandit aliquam etiam erat velit scelerisque. Eget nulla facilisi etiam dignissim diam. Volutpat commodo sed egestas egestas fringilla phasellus. Urna id volutpat lacus laoreet non curabitur. Orci phasellus egestas tellus rutrum tellus pellentesque eu. Enim sit amet venenatis urna cursus eget nunc.\r\n\r\nVelit egestas dui id ornare arcu. Ultrices in iaculis nunc sed augue lacus viverra vitae congue. Sit amet consectetur adipiscing elit. Quis blandit turpis cursus in. Iaculis eu non diam phasellus vestibulum lorem. Fermentum leo vel orci porta non. Eget aliquet nibh praesent tristique magna sit amet. Justo eget magna fermentum iaculis eu. Commodo viverra maecenas accumsan lacus. Lobortis mattis aliquam faucibus purus in massa. Egestas tellus rutrum tellus pellentesque eu. Aliquet porttitor lacus luctus accumsan. Lacus vel facilisis volutpat est.\r\n\r\nIn fermentum posuere urna nec tincidunt praesent semper feugiat. Nulla pharetra diam sit amet. Eget mauris pharetra et ultrices neque ornare. Ut consequat semper viverra nam libero justo laoreet sit amet. Etiam sit amet nisl purus in mollis nunc. Leo a diam sollicitudin tempor id eu nisl nunc. Augue ut lectus arcu bibendum at varius. Accumsan sit amet nulla facilisi morbi tempus iaculis urna. Malesuada pellentesque elit eget gravida. Tellus id interdum velit laoreet id. Vel pretium lectus quam id leo. Velit dignissim sodales ut eu sem integer vitae justo. Odio ut enim blandit volutpat maecenas volutpat blandit. Id semper risus in hendrerit gravida. Massa tempor nec feugiat nisl pretium fusce id.\r\n\r\nVitae congue eu consequat ac. Arcu dictum varius duis at consectetur lorem donec. Euismod in pellentesque massa placerat duis ultricies lacus sed. Vulputate sapien nec sagittis aliquam malesuada bibendum. In hendrerit gravida rutrum quisque. Scelerisque eu ultrices vitae auctor eu. Eu non diam phasellus vestibulum. Penatibus et magnis dis parturient montes. Orci phasellus egestas tellus rutrum tellus pellentesque. Vel pretium lectus quam id leo. Velit dignissim sodales ut eu. Scelerisque viverra mauris in aliquam sem fringilla ut. Gravida neque convallis a cras semper auctor neque. Faucibus in ornare quam viverra orci sagittis eu volutpat odio. Nibh nisl condimentum id venenatis. Ut porttitor leo a diam. Suscipit tellus mauris a diam. Tempor orci eu lobortis elementum nibh tellus. Massa vitae tortor condimentum lacinia quis vel eros donec ac. Malesuada proin libero nunc consequat interdum varius sit amet mattis.\r\n\r\nNeque sodales ut etiam sit amet nisl purus. Accumsan lacus vel facilisis volutpat est velit egestas dui id. Viverra maecenas accumsan lacus vel facilisis volutpat est. Et molestie ac feugiat sed lectus vestibulum mattis. Id diam vel quam elementum pulvinar etiam. Mollis aliquam ut porttitor leo a. Dolor sit amet consectetur adipiscing elit pellentesque habitant. Sit amet venenatis urna cursus eget nunc scelerisque viverra mauris. Adipiscing tristique risus nec feugiat in fermentum posuere urna nec. Netus et malesuada fames ac. Dolor purus non enim praesent elementum facilisis. Etiam dignissim diam quis enim lobortis scelerisque. In hac habitasse platea dictumst. Vel risus commodo viverra maecenas accumsan lacus vel. Nisl purus in mollis nunc sed id semper risus in. Amet risus nullam eget felis eget nunc lobortis. Fermentum leo vel orci porta non pulvinar neque laoreet suspendisse. Viverra accumsan in nisl nisi scelerisque eu ultrices vitae. Quis lectus nulla at volutpat. </p>\r\n    </div>\r\n  );\r\n}\r\n}\r\n\r\nexport default Products;\r\n","import React from 'react';\nimport './assets/scss/default.css';\nimport Header from './components/headerComponent1/header';\nimport Footer from './components/footerComponent/footer';\nimport Homepage from './components/pages/homePage';\nimport Products from './components/pages/products';\nimport ReactCSSTransitionGroup from 'react-transition-group';\nimport $ from 'jquery';\nimport{\n  BrowserRouter as Router,\n  Route,\n  Link\n} from 'react-router-dom';\n//import './App.css';\n\nfunction App() {\n  return (\n\n\n\n        <Homepage />\n\n\n\n\n  );\n}\n\nexport default App;\n/////\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}